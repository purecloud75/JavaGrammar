package chap07.Abstract2;

public abstract class Animal {

    public String kind;

    public Animal() {}

    public void breathe() {
        System.out.println("숨을 쉽니다.");
    }

    public abstract void sound();  //추상 메소드. 추상 클래스에서는 선언만 해주고, 정의는 각 실체(=자식=하위) 클래스에서 무조건 해야함
}


/*
추상클래스는 실체클래스가 공통적으로 가져야 할 필드와 메소드를을 정의해놓은 추상적인 클래스로
실체클래스의 멤버(필드, 메소드)를 통일하는 데 목적이 있습니다.
추상클래스 설계 시 하위클래스가 반드시 실행 내용을 채우도록 강제하고 싶은 메소드가 있을 경우 추상메소드로 선언한다. 추상클래스에서만 사용가능.
자식클래스(실체클래스)는 반드시 추상메소드를 재정의해서 실행내용을 작성해야하는데, 그렇지 않으면 컴파일 에러가 발생한다. 꼭 쓰라는거지.

추상 메소드를 재정의하지 않으면 자식 클래스도 추상 클래스가 되어야 한다.

추상클래스는 상속을 하기 위해 만드는 클래스이다. 마치 상속에서 메소드 재정의와 비슷한 느낌이다.
야 일단 이 메소드는 만들어놨는데 너희마다 이거 쓰는방법 다 다르니까 알아서 가져다가 구현해놔 -> 상속해서 추상클래스의 실현을 통해 해결.
그리고 공통적으로 가져갈 부분은 추상클래스안에서 그냥 구현해놓으면 되지.

메소드를 구현한거(하위객체가 공통적으로 쓸)와 안한거(각자가 다 달라서 따로 구현해야하는) 섞인거가 추상클래스 vs 구현 안한거만 있는 인터페이스!
 */